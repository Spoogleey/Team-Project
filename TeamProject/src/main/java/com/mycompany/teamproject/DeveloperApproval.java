/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.teamproject;

import static com.mycompany.teamproject.AddEventPage.ValidateInput;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author User
 */
public class DeveloperApproval extends javax.swing.JFrame {

    private final DatabaseConnection database;
    ResultSet rs = null;
    /**
     * Creates new form DeveloperApproval
     */
    public DeveloperApproval() {
        initComponents();
        database = new DatabaseConnection();
        updateApprovalTable();
    }
    
    private final DeniedEventsQueries InsertDenied = new DeniedEventsQueries();

    public void updateApprovalTable(){
        database.Connect("events.db");
        String sql = "SELECT event_name, company_name, event_price, min_age, max_age, event_desc FROM events INNER JOIN companies ON companies.company_id = events.company_id WHERE approved = 0;";
        
        try{
            rs = database.RunSQLQuery(sql);
            
            while(rs.next()){
                
                String name = rs.getString("event_name");
                String comp = rs.getString("company_name");
                String price = rs.getString("event_price");
                int min = rs.getInt("min_age");
                int max = rs.getInt("max_age");
                String desc = rs.getString("event_desc");
                
                String stringMin = Integer.toString(min);
                String stringMax = Integer.toString(max);
                
                String tbData [] = {name, comp, price, stringMin, stringMax, desc};
                DefaultTableModel PendingModel = (DefaultTableModel)EventTable.getModel();
                
                PendingModel.addRow(tbData);
                
            }
        } catch (Exception e){
            
        }
        
    }
    
    public void ApproveEvent(){
        
        database.Connect("events.db");
        
        try{
            if (EventNameLabel != null){
                String sql = "UPDATE events SET approved = 1 WHERE event_name = '"+EventNameLabel.getText()+"';";
                boolean pass = database.RunSQL(sql);
                if (!pass){
                    System.out.println("Failed to approve this event.");
                    JOptionPane.showMessageDialog(null, "Event not approved");           
                }
                else{
                    JOptionPane.showMessageDialog(null, "Event Approved");
                }
                    
            }
            else{
                JOptionPane.showMessageDialog(null, "Please select an event from the table.");
            }
            
        }
        catch (Exception e){
            
        }
    }
    
    public void DenyEvent(){
        
        String reason = JOptionPane.showInputDialog("Please explain the reason for denial: ");
        
        if(reason != null && ValidateInput(reason)){
            JOptionPane.showMessageDialog(null, "Thank you.");
            InsertDenied.denyEvent(EventNameLabel.getText(), reason);
        }
        else
        {
            JOptionPane.showMessageDialog(null, "You must give reason to allow a denial.");
        }
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        EventTable = new javax.swing.JTable();
        DenyButton = new javax.swing.JButton();
        toCompInfo = new javax.swing.JButton();
        EventNameLabel = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        ApproveButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        EventTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Event", "Company", "Price", "Min Age", "Max Age", "Event Description"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        EventTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EventTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(EventTable);

        DenyButton.setText("Deny Event");
        DenyButton.setPreferredSize(new java.awt.Dimension(115, 23));
        DenyButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DenyButtonMouseClicked(evt);
            }
        });
        DenyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DenyButtonActionPerformed(evt);
            }
        });

        toCompInfo.setText("Company information");
        toCompInfo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                toCompInfoMouseClicked(evt);
            }
        });
        toCompInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toCompInfoActionPerformed(evt);
            }
        });

        jLabel1.setText("Event To Approve:");

        ApproveButton.setText("Approve Event");
        ApproveButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ApproveButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(36, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 711, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(ApproveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(DenyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(toCompInfo)
                        .addGap(27, 27, 27))))
            .addGroup(layout.createSequentialGroup()
                .addGap(192, 192, 192)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(EventNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(EventNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(toCompInfo)
                    .addComponent(DenyButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ApproveButton))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DenyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DenyButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DenyButtonActionPerformed

    private void toCompInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toCompInfoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_toCompInfoActionPerformed

    private void toCompInfoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_toCompInfoMouseClicked
        // TODO add your handling code here:
        this.dispose();
        CompanyInformationPage obj = new CompanyInformationPage();
        obj.setVisible(true);
    }//GEN-LAST:event_toCompInfoMouseClicked

    private void ApproveButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ApproveButtonMouseClicked
        // TODO add your handling code here:
        ApproveEvent();
        
    }//GEN-LAST:event_ApproveButtonMouseClicked

    private void EventTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EventTableMouseClicked
        // TODO add your handling code here:
        
        int row = EventTable.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel)EventTable.getModel();
        
        EventNameLabel.setText(model.getValueAt(row, 0).toString());
        
    }//GEN-LAST:event_EventTableMouseClicked

    private void DenyButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DenyButtonMouseClicked
        // TODO add your handling code here:
        DenyEvent();
    }//GEN-LAST:event_DenyButtonMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DeveloperApproval.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DeveloperApproval.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DeveloperApproval.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DeveloperApproval.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DeveloperApproval().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ApproveButton;
    private javax.swing.JButton DenyButton;
    private javax.swing.JTextField EventNameLabel;
    private javax.swing.JTable EventTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton toCompInfo;
    // End of variables declaration//GEN-END:variables
}
