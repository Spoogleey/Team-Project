/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.teamproject;
import java.sql.*;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
        
/**
 *
 * @author jacka
 */
public class userHome extends javax.swing.JFrame {
    
    private final userHomeQueries query = new userHomeQueries();
    private final DatabaseConnection database;
    private final String filename = "events.db";
    
    

    /**
     * Creates new form userHome
     */
    public userHome() {
        initComponents();
        locationComboBox();
        genreComboBox(); 
        database = new DatabaseConnection();
        database.Connect(filename);
    }
    

    
    
    //Setting the text of the location combobox
    private void locationComboBox(){
        ResultSet locations = query.getLocations();
        try {
            while(locations.next()){
                String location = locations.getString(1);
                locationCombo.addItem(location);
            }
        } catch (SQLException ex) {
            Logger.getLogger(userHome.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    //Setting the text of the genre combobox
    private void genreComboBox(){
        ResultSet genres = query.getMusicGenres();
        try{
            while(genres.next()){
                String genre = genres.getString(1);
                genreCombo.addItem(genre);
            }
        }catch (SQLException ex){
            Logger.getLogger(userHome.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    
    //Getting the users filters from the comboboxes
    public String getFilters(){

        String locationPref;
        Integer minAgePref;
        Integer maxAgePref;
        String genrePref;
        Integer pricePref = null;

        
        //Location
       locationPref = (locationCombo.getSelectedItem()).toString();
       
       //Age-Range
       String ageRangePref = (ageRangeCombo.getSelectedItem()).toString();
       if (ageRangePref.equals("Any") ){
           minAgePref = 0;
           maxAgePref = 99;
       }else{
           minAgePref = Integer.parseInt(ageRangePref.substring(0,ageRangePref.indexOf("-")));
           maxAgePref = Integer.parseInt(ageRangePref.substring(ageRangePref.indexOf("-")+1));
       }
       
       //Genre
       genrePref = (genreCombo.getSelectedItem()).toString();
       
       //Price
       String pricePrefStr = (priceRangeCombo.getSelectedItem()).toString();
        switch (pricePrefStr) {
            case "£" -> pricePref = 5;
            case "££" -> pricePref = 10;
            case "£££" -> pricePref = 20;
            case "Any" -> pricePref = 100;
            default -> {
            }
        }
        
        
        //Join 
        //location, music and event table
        //on location_id, music_id
        
        //Get 
        //event_name
        //event_desc
        //event_venue
        //event_date
        //event_price
        
        //Filters
        //location_name
        //music_name
        //event_price
        //min_age
        //max_age
        
       String filterSql = "SELECT event_name, event_desc, event_venue, event_data, event_price "
                + "FROM events "
                + "INNER JOIN locations "
                + "ON events.location_id = locations.loaction_id "
                + "INNER JOIN music "
                + "ON events.music_id = music.music_id "
                + "WHERE location_name = '"+locationPref +"' "
                + "AND music_name = '"+genrePref +"' "
                + "AND event_price <= "+pricePref
                + " AND min_age >= "+minAgePref
                + " AND max_age <= "+maxAgePref+ " ;"
                ;
       
        System.out.println(filterSql);
       return filterSql;
       
    }
    
    private void populateTable() throws SQLException{       
            
        }
        
        

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        eventTable = new javax.swing.JScrollPane();
        mainTable = new javax.swing.JTable();
        genreCombo = new javax.swing.JComboBox<>();
        genreLabel = new javax.swing.JLabel();
        priceRangeCombo = new javax.swing.JComboBox<>();
        priceRangeLabel = new javax.swing.JLabel();
        ageRangeCombo = new javax.swing.JComboBox<>();
        ageRangeLabel = new javax.swing.JLabel();
        locationCombo = new javax.swing.JComboBox<>();
        locationLabel = new javax.swing.JLabel();
        confirmFilterButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        mainTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ));
        eventTable.setViewportView(mainTable);

        genreCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genreComboActionPerformed(evt);
            }
        });

        genreLabel.setText("Genre:");

        priceRangeCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "£", "££", "£££", "Any", " " }));

        priceRangeLabel.setText("Price Range:");

        ageRangeCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Any", "18-30", "25-40", "30-50" }));

        ageRangeLabel.setText("Age Range:");

        locationLabel.setText("Location:");

        confirmFilterButton.setText("Filter");
        confirmFilterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmFilterButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addGap(15, 15, 15)
                            .addComponent(confirmFilterButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(locationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(locationCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(ageRangeLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(ageRangeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(priceRangeLabel)
                            .addGap(5, 5, 5)
                            .addComponent(priceRangeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(genreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(genreCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(13, 13, 13))
                        .addComponent(eventTable, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addContainerGap()))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 606, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(69, 69, 69)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(genreCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(genreLabel)
                        .addComponent(priceRangeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(priceRangeLabel)
                        .addComponent(ageRangeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ageRangeLabel)
                        .addComponent(locationCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(locationLabel)
                        .addComponent(confirmFilterButton))
                    .addGap(18, 18, 18)
                    .addComponent(eventTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(70, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(516, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void genreComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genreComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_genreComboActionPerformed

    private void confirmFilterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmFilterButtonActionPerformed
        // TODO add your handling code here:
        getFilters();
        
    }//GEN-LAST:event_confirmFilterButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(userHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(userHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(userHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(userHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new userHome().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ageRangeCombo;
    private javax.swing.JLabel ageRangeLabel;
    private javax.swing.JButton confirmFilterButton;
    private javax.swing.JScrollPane eventTable;
    private javax.swing.JComboBox<String> genreCombo;
    private javax.swing.JLabel genreLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JComboBox<String> locationCombo;
    private javax.swing.JLabel locationLabel;
    private javax.swing.JTable mainTable;
    private javax.swing.JComboBox<String> priceRangeCombo;
    private javax.swing.JLabel priceRangeLabel;
    // End of variables declaration//GEN-END:variables
}
